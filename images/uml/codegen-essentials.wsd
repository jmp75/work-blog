@startuml codegen-wrappers

' Maybe. 
!include <logos/r-lang.puml>
!include <logos/python.puml>
' !include <logos/typescript.puml>
' !include <logos/kubernetes.puml>
' !include <logos/flask.puml>
!include <logos/c.puml>
!include <logos/c-plusplus.puml>
' !include <logos/docker.puml>

' left to right direction

' package "cruise-control" {
' }

' floating note 
'   Consider: Senaps, Eagle, Hydroshare.
'   Links to Digital Water 
' end note

package "<$python>\nuchronia" {
    rectangle "<$python>\nuchronia" as uchronia_py #LightGreen
    rectangle #line:red;line.bold {
        rectangle "<$python>\nlow-level wrapper" as uchronia_wrap_py #LightGreen
    }
    rectangle "<$python>\ncffi" as cffi_py #LightGreen
    rectangle "<$python>\nrefcount" as refcount_py #LightGreen
}
package "<$r-lang>\nuchronia" {
    rectangle "<$r-lang>\nuchronia" as uchronia_r #LightSkyBlue
    rectangle " " as rect_r_codegen #line:red;line.bold {
        rectangle "<$r-lang>\low-level R wrapper" as uchronia_wrap_r #LightSkyBlue
        rectangle "<$c-plusplus>\nlow-level Rcpp wrapper" as uchronia_wrap_rcpp #LightSalmon
    }
}

package "<$C>\nuchronia" {
    rectangle "<$c>\nC API" as uchronia_c_code #LightSalmon
    rectangle "<$c-plusplus>\nC++ core" as uchronia_cpp_code #LightSalmon
}

uchronia_py --> uchronia_wrap_py
uchronia_wrap_py --> cffi_py
uchronia_wrap_py --> refcount_py
cffi_py --> uchronia_c_code 
uchronia_c_code --> uchronia_cpp_code 

uchronia_r --> uchronia_wrap_r
uchronia_wrap_r --> uchronia_wrap_rcpp
uchronia_wrap_rcpp --> uchronia_c_code 

note right of uchronia_wrap_py
    generated by
    parsing the
    C API header
end note

note top of rect_r_codegen
    generated by
    parsing the
    C API header
end note

@enduml
